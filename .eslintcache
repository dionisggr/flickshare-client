[{"C:\\Users\\diolo\\www\\react-template\\src\\index.js":"1","C:\\Users\\diolo\\www\\react-template\\src\\App.js":"2","C:\\Users\\diolo\\www\\flickshare-client\\src\\index.js":"3","C:\\Users\\diolo\\www\\flickshare-client\\src\\App.js":"4","C:\\Users\\diolo\\www\\flickshare-client\\src\\config.js":"5","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\movie-service.js":"6","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\validation.js":"7","C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\error-boundary.js":"8","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\ResetPassword.js":"9","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Suggestions\\Suggestions.js":"10","C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\Error.js":"11","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\api.js":"12","C:\\Users\\diolo\\www\\flickshare-client\\src\\Header\\Header.js":"13","C:\\Users\\diolo\\www\\flickshare-client\\src\\Footer\\Footer.js":"14","C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\MainMenu.js":"15","C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\Welcome.js":"16","C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Login.js":"17","C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Register.js":"18","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\User.js":"19","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserEdit.js":"20","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Lists.js":"21","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\List.js":"22","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\Movie.js":"23","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieSearch.js":"24","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Admin.js":"25","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListPreview.js":"26","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MoviePreview.js":"27","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieOptions.js":"28","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Users.js":"29","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserPreview.js":"30","C:\\Users\\diolo\\www\\flickshare-client\\src\\context\\token-context.js":"31","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\token-service.js":"32","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListEdit.js":"33"},{"size":171,"mtime":1611252467376,"results":"34","hashOfConfig":"35"},{"size":202,"mtime":1611252349029,"results":"36","hashOfConfig":"35"},{"size":270,"mtime":1613365713205,"results":"37","hashOfConfig":"38"},{"size":7091,"mtime":1614087577276,"results":"39","hashOfConfig":"38"},{"size":475,"mtime":1613710073089,"results":"40","hashOfConfig":"38"},{"size":637,"mtime":1613697559869,"results":"41","hashOfConfig":"38"},{"size":1183,"mtime":1613906576406,"results":"42","hashOfConfig":"38"},{"size":525,"mtime":1613902270926,"results":"43","hashOfConfig":"38"},{"size":2406,"mtime":1614055909078,"results":"44","hashOfConfig":"38"},{"size":1801,"mtime":1614086856239,"results":"45","hashOfConfig":"38"},{"size":421,"mtime":1613905598621,"results":"46","hashOfConfig":"38"},{"size":6475,"mtime":1614041275011,"results":"47","hashOfConfig":"38"},{"size":1828,"mtime":1613905550774,"results":"48","hashOfConfig":"38"},{"size":686,"mtime":1614089220415,"results":"49","hashOfConfig":"38"},{"size":830,"mtime":1613923869842,"results":"50","hashOfConfig":"38"},{"size":1831,"mtime":1614081418936,"results":"51","hashOfConfig":"38"},{"size":1780,"mtime":1614055329784,"results":"52","hashOfConfig":"38"},{"size":3973,"mtime":1614055825395,"results":"53","hashOfConfig":"38"},{"size":2677,"mtime":1614054292358,"results":"54","hashOfConfig":"38"},{"size":3187,"mtime":1614047220919,"results":"55","hashOfConfig":"38"},{"size":3094,"mtime":1614087844774,"results":"56","hashOfConfig":"38"},{"size":6651,"mtime":1614052915820,"results":"57","hashOfConfig":"38"},{"size":2010,"mtime":1614047717294,"results":"58","hashOfConfig":"38"},{"size":1711,"mtime":1614047122357,"results":"59","hashOfConfig":"38"},{"size":1658,"mtime":1614022604235,"results":"60","hashOfConfig":"38"},{"size":3127,"mtime":1614084733193,"results":"61","hashOfConfig":"38"},{"size":936,"mtime":1614084977771,"results":"62","hashOfConfig":"38"},{"size":4525,"mtime":1614049810378,"results":"63","hashOfConfig":"38"},{"size":906,"mtime":1613906299046,"results":"64","hashOfConfig":"38"},{"size":597,"mtime":1613905682341,"results":"65","hashOfConfig":"38"},{"size":105,"mtime":1613919324855,"results":"66","hashOfConfig":"38"},{"size":423,"mtime":1613925123640,"results":"67","hashOfConfig":"38"},{"size":900,"mtime":1613952438976,"results":"68","hashOfConfig":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jr9xs2",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1fglsoy",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\diolo\\www\\react-template\\src\\index.js",[],"C:\\Users\\diolo\\www\\react-template\\src\\App.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\index.js",[],["138","139"],"C:\\Users\\diolo\\www\\flickshare-client\\src\\App.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\config.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\movie-service.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\validation.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\error-boundary.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\ResetPassword.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Suggestions\\Suggestions.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\Error.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\api.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Header\\Header.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Footer\\Footer.js",["140","141","142","143","144","145"],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\MainMenu.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\Welcome.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Login.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Register.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\User.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserEdit.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Lists.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\List.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\Movie.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieSearch.js",["146"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Movie from './Movie';\r\nimport MovieService from '../services/movie-service';\r\nimport Error from '../error-handlers/Error';\r\nimport api from '../services/api';\r\nimport './MovieSearch.css';\r\n\r\nclass MovieSearch extends React.Component {\r\n  state = { results: [] };\r\n\r\n  search = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const movie = evt.target.movie_input.value;\r\n\r\n    const response = await api.searchMovie(movie)\r\n      .catch(error => <Error message={error} />);\r\n    \r\n    const results = MovieService.prepare(response.results);\r\n    \r\n    this.setState({ results });\r\n  };\r\n\r\n  addToList = (movie) => {\r\n    const { match, addMovie } = this.props;\r\n    const list_id = parseInt(match.params.list);\r\n\r\n    api.addMovieToList(list_id, movie)\r\n      .then(() => window.location.reload())\r\n      .catch(error => console.log({ error }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='movie-search'>\r\n        <form\r\n          className='search'\r\n          onSubmit={this.search}\r\n        >\r\n          <h3>Movie Search</h3>\r\n          <input\r\n            type='text'\r\n            id='movie_input'\r\n            name='movie_input'\r\n            placeholder='Search...'\r\n          />\r\n          <button type='submit'>Search</button>\r\n        </form>\r\n        <div className='results'>\r\n          {\r\n            this.state.results.map((movie, idx) => \r\n              <Movie\r\n                key={idx}\r\n                movie={movie}\r\n                addToList={this.addToList}\r\n              />\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withRouter(MovieSearch);","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Admin.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListPreview.js",["147"],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MoviePreview.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieOptions.js",["148"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { JWT_SECRET } from '../config';\r\nimport jwt from 'jsonwebtoken';\r\nimport MovieService from '../services/movie-service';\r\nimport Error from '../error-handlers/Error';\r\nimport api from '../services/api';\r\nimport './MovieOptions.css';\r\n\r\nclass MovieOptions extends React.Component {\r\n  static defaultProps = { list: {}, setMovies: {} };\r\n\r\n  state = { lists: null, movieWasAdded: null, list: {} };\r\n\r\n  getUserLists = () => {\r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n          if (error) return null;\r\n          return decoded;\r\n        })\r\n      : null;\r\n    \r\n    const user_id = (decoded) ? decoded.user_id : null;\r\n\r\n    api.getUserLists(user_id)\r\n      .then(lists => {\r\n        return this.setState({ lists });\r\n      })\r\n      .catch(error => <Error message={error} />);\r\n  };\r\n\r\n  addToList = (list_id, movie) => {\r\n    api.addMovieToList(list_id, movie)\r\n      .then(() => {\r\n        const newState = { ...this.state };\r\n\r\n        newState.lists = null;\r\n        newState.movieWasAdded = true;\r\n\r\n        return this.setState(newState);\r\n      })\r\n      .catch(() => {\r\n        const newState = { ...this.state };\r\n\r\n        newState.movieWasAdded = false;\r\n\r\n        this.setState(newState);\r\n      });\r\n  };\r\n\r\n  removeMovie = async (list_id, movie_id) => {\r\n    api.removeMovieFromList(list_id, movie_id)\r\n      .then((res) => window.location.reload())\r\n      .catch(error => <Error message={error} />);\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const newState = { ...this.state };\r\n    const { list, match } = this.props;\r\n    const list_id = parseInt(match.params.list);\r\n\r\n    if (!list.list_id) {\r\n      const list = await api.getListById(list_id);\r\n\r\n      newState.list = list;\r\n\r\n      this.setState(newState);\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { lists, movieWasAdded } = this.state;\r\n    let { movie, list } = this.props;\r\n    const { movie_id } = movie;\r\n    const list_id = (list.list_id)\r\n      ? list.list_id\r\n      : parseInt(this.props.match.params.list);\r\n\r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n        if (error) return null;\r\n        return decoded;\r\n      })\r\n      : null;\r\n    \r\n    const addButton = (decoded)\r\n      ? <button\r\n        type='button'\r\n        className='add'\r\n        onClick={this.getUserLists}\r\n      >\r\n        +\r\n        </button>\r\n      : null;\r\n    \r\n    if (!list.list_id) {\r\n      list = this.state.list;\r\n    };    \r\n    \r\n    const removeButton = (\r\n      decoded && list && decoded.user_id === list.user_id\r\n    )\r\n      ? <button\r\n        className='remove-movie'\r\n        onClick={() => this.removeMovie(list_id, movie_id)}\r\n      >\r\n        x\r\n        </button>\r\n      : null;\r\n\r\n    if (movieWasAdded !== null) {\r\n      setTimeout(() => {\r\n        const newState = { ...this.state };\r\n        newState.movieWasAdded = null;\r\n        this.setState(newState);\r\n      }, 1500)\r\n      return (\r\n        <div className='movie-added'>\r\n          {\r\n            (movieWasAdded)\r\n              ? < h4 > Movie added.</h4>\r\n              : < h4 > Already on list!</h4>\r\n          }\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const movieListOptions = (lists)\r\n      ? <div className='movie-list-options'>\r\n          <label>Lists</label>\r\n          <ul>\r\n            {\r\n              lists.map((list, idx) =>\r\n                <li key={idx}>\r\n                  <button\r\n                    type='button'\r\n                    onClick={() => this.addToList(list_id, movie)}\r\n                  >\r\n                    {list.name}\r\n                  </button>\r\n                </li>\r\n              )\r\n            }\r\n          </ul>\r\n        </div>\r\n      : null;\r\n    \r\n    const moviePreviewOptions = (!lists)\r\n      ? <div className='movie-preview-options'>\r\n          {removeButton}\r\n          {addButton}\r\n\r\n          <Link to={{\r\n            pathname: `/movies/${movie_id}`,\r\n            movie\r\n          }}>\r\n            More Info\r\n            </Link>\r\n\r\n        </div>\r\n      : null;\r\n    \r\n    return (\r\n      <>\r\n        { movieListOptions}\r\n        { moviePreviewOptions}\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withRouter(MovieOptions);","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Users.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserPreview.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\context\\token-context.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\token-service.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListEdit.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":7,"column":9,"nodeType":"155","endLine":7,"endColumn":81},{"ruleId":"156","severity":1,"message":"157","line":7,"column":9,"nodeType":"155","endLine":7,"endColumn":81},{"ruleId":"153","severity":1,"message":"154","line":8,"column":9,"nodeType":"155","endLine":8,"endColumn":103},{"ruleId":"156","severity":1,"message":"157","line":8,"column":9,"nodeType":"155","endLine":8,"endColumn":103},{"ruleId":"153","severity":1,"message":"154","line":9,"column":9,"nodeType":"155","endLine":9,"endColumn":111},{"ruleId":"156","severity":1,"message":"157","line":9,"column":9,"nodeType":"155","endLine":9,"endColumn":111},{"ruleId":"158","severity":1,"message":"159","line":26,"column":20,"nodeType":"160","messageId":"161","endLine":26,"endColumn":28},{"ruleId":"162","severity":1,"message":"163","line":38,"column":30,"nodeType":"164","messageId":"165","endLine":38,"endColumn":50},{"ruleId":"158","severity":1,"message":"166","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":20},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-unused-vars","'addMovie' is assigned a value but never used.","Identifier","unusedVar","no-self-assign","'newState.list.movies' is assigned to itself.","MemberExpression","selfAssignment","'MovieService' is defined but never used.","no-global-assign","no-unsafe-negation"]