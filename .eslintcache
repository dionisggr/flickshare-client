[{"C:\\Users\\diolo\\www\\react-template\\src\\index.js":"1","C:\\Users\\diolo\\www\\react-template\\src\\App.js":"2","C:\\Users\\diolo\\www\\flickshare-client\\src\\index.js":"3","C:\\Users\\diolo\\www\\flickshare-client\\src\\App.js":"4","C:\\Users\\diolo\\www\\flickshare-client\\src\\Header.js":"5","C:\\Users\\diolo\\www\\flickshare-client\\src\\Footer.js":"6","C:\\Users\\diolo\\www\\flickshare-client\\src\\Welcome.js":"7","C:\\Users\\diolo\\www\\flickshare-client\\src\\Login.js":"8","C:\\Users\\diolo\\www\\flickshare-client\\src\\Register.js":"9","C:\\Users\\diolo\\www\\flickshare-client\\src\\api.js":"10","C:\\Users\\diolo\\www\\flickshare-client\\src\\Error.js":"11","C:\\Users\\diolo\\www\\flickshare-client\\src\\List.js":"12","C:\\Users\\diolo\\www\\flickshare-client\\src\\ListPreview.js":"13","C:\\Users\\diolo\\www\\flickshare-client\\src\\MoviePreview.js":"14","C:\\Users\\diolo\\www\\flickshare-client\\src\\MovieOptions.js":"15","C:\\Users\\diolo\\www\\flickshare-client\\src\\config.js":"16","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movie.js":"17","C:\\Users\\diolo\\www\\flickshare-client\\src\\User.js":"18","C:\\Users\\diolo\\www\\flickshare-client\\src\\UserEdit.js":"19","C:\\Users\\diolo\\www\\flickshare-client\\src\\helpers\\validation.js":"20"},{"size":171,"mtime":1611252467376,"results":"21","hashOfConfig":"22"},{"size":202,"mtime":1611252349029,"results":"23","hashOfConfig":"22"},{"size":270,"mtime":1613365713205,"results":"24","hashOfConfig":"25"},{"size":4414,"mtime":1613679891250,"results":"26","hashOfConfig":"25"},{"size":1403,"mtime":1613633444513,"results":"27","hashOfConfig":"25"},{"size":171,"mtime":1613368797868,"results":"28","hashOfConfig":"25"},{"size":1255,"mtime":1613597697497,"results":"29","hashOfConfig":"25"},{"size":1608,"mtime":1613678695292,"results":"30","hashOfConfig":"25"},{"size":3764,"mtime":1613639914185,"results":"31","hashOfConfig":"25"},{"size":2447,"mtime":1613678273516,"results":"32","hashOfConfig":"25"},{"size":252,"mtime":1613431165083,"results":"33","hashOfConfig":"25"},{"size":1698,"mtime":1613680024263,"results":"34","hashOfConfig":"25"},{"size":1765,"mtime":1613679302964,"results":"35","hashOfConfig":"25"},{"size":939,"mtime":1613585574967,"results":"36","hashOfConfig":"25"},{"size":390,"mtime":1613431213772,"results":"37","hashOfConfig":"25"},{"size":329,"mtime":1613667643846,"results":"38","hashOfConfig":"25"},{"size":1472,"mtime":1613595450029,"results":"39","hashOfConfig":"25"},{"size":2381,"mtime":1613663553283,"results":"40","hashOfConfig":"25"},{"size":3114,"mtime":1613640728074,"results":"41","hashOfConfig":"25"},{"size":1169,"mtime":1613640240675,"results":"42","hashOfConfig":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jr9xs2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1fglsoy",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\diolo\\www\\react-template\\src\\index.js",[],"C:\\Users\\diolo\\www\\react-template\\src\\App.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\index.js",[],["87","88"],"C:\\Users\\diolo\\www\\flickshare-client\\src\\App.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Header.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Footer.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Welcome.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Login.js",["89","90"],"import React from 'react';\r\nimport { JWT_SECRET } from './config';\r\nimport jwt from 'jsonwebtoken';\r\nimport Error from './Error';\r\nimport api from './api';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n  login = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const username = evt.target.username.value;\r\n    const password = evt.target.password.value;\r\n\r\n    const { history, userLogged, setUserLists } = this.props;\r\n\r\n    const { flickshareToken } = await api.login(username, password)\r\n      .catch(error => <Error message={error} />);\r\n    \r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n          if (error) return null;\r\n          return decoded;\r\n        })\r\n      : null;\r\n    \r\n    const user_id = (decoded) ? decoded.user_id : null;\r\n\r\n    const userLists = await api.getUserLists(user_id)\r\n      .catch(error => <Error message={error} />);\r\n    \r\n    window.localStorage.setItem('flickshareToken', JSON.stringify(flickshareToken));\r\n\r\n    userLogged(true);\r\n\r\n    history.push('/home');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className='login' onSubmit={this.login}>\r\n        <h3>LOGIN</h3>\r\n        <label htmlFor='username'>Username</label>\r\n        <input\r\n          type='text' required\r\n          name='username' id='username'\r\n        />\r\n        <label htmlFor='password'>Password</label>\r\n        <input\r\n          type='text' required\r\n          name='password' id='password'\r\n        />\r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Login;","C:\\Users\\diolo\\www\\flickshare-client\\src\\Register.js",["91"],"import React from 'react';\r\nimport Error from './Error';\r\nimport validation from './helpers/validation';\r\nimport api from './api';\r\nimport './Register.css';\r\n\r\nclass Register extends React.Component {\r\n\r\n  addUser = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    evt.target.querySelectorAll('label.error').forEach(label => {\r\n      label.style.display = 'none';\r\n    });\r\n\r\n    const { history, userLogged } = this.props;\r\n\r\n    const newUser = {\r\n      first_name: evt.target.first_name.value,\r\n      last_name: evt.target.last_name.value,\r\n      username: evt.target.username.value,\r\n      email: evt.target.email.value,\r\n      password: evt.target.password.value,\r\n      repeat_password: evt.target.repeat_password.value,\r\n    };\r\n\r\n    const usernameExists = await validation.validUsername(newUser);\r\n\r\n    if (usernameExists) {\r\n      return evt.target.querySelector('#error_username').style.display = 'block';\r\n    };\r\n\r\n    const validPassword = await validation.validPassword(newUser, evt);\r\n\r\n    if (!validPassword) {\r\n      return;\r\n    }\r\n\r\n    delete newUser.repeat_password;\r\n\r\n    for (const [key, value] of Object.entries(newUser)) {\r\n      if (!value && key !== 'repeat_password') {\r\n        return evt.target.querySelector(`#error_${key}`).style.display = 'block';\r\n      };\r\n    };\r\n\r\n    newUser.admin = false;\r\n\r\n    api.addUser(newUser)\r\n      .then(({ flickshareToken }) => {\r\n        window.localStorage.setItem('flickshareToken', JSON.stringify(flickshareToken));\r\n        userLogged(true);\r\n        history.push(`/home`);\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scroll(0,0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className='register'\r\n        autoComplete='off'\r\n        onSubmit={this.addUser}\r\n      >\r\n        <h3>REGISTER</h3>\r\n\r\n        <label htmlFor='first_name'>First Name:</label>\r\n        <input\r\n          type='text' required\r\n          name='first_name' id='first_name'\r\n        />\r\n\r\n        <label htmlFor='last_name'>Last Name:</label>\r\n        <input \r\n          type='text' required\r\n          name='last_name' id='last_name'\r\n        />\r\n\r\n        <label htmlFor='email'>E-mail:</label>\r\n        <input \r\n          type='text' required\r\n          name='email' id='email'\r\n        />\r\n\r\n        <label htmlFor='username'>Username:</label>\r\n        <input \r\n          type='text' required\r\n          name='username' id='username'\r\n        />\r\n        <label\r\n          htmlFor='username'\r\n          id='error_username'\r\n          className='error'\r\n          style={{ display: 'none' }}\r\n        >\r\n          <p>Username exists.</p>\r\n        </label>\r\n\r\n        <label htmlFor='password'>Password</label>\r\n        <input \r\n          type='text' required\r\n          name='password' id='password'\r\n        />\r\n        <label\r\n          htmlFor='password'\r\n          id='error_password'\r\n          className='error'\r\n          style={{ display: 'none' }}\r\n        >\r\n          <p>Password must be at least 8 charaters.</p>\r\n          <p>Password must not contain spaces.</p>\r\n          <p>Password must contain at least 1 Uppercase.</p>\r\n          <p>Password must contain at least 1 number.</p>\r\n        </label>\r\n      \r\n        <label htmlFor='repeat_password'>Repeat password:</label>\r\n        <input \r\n          type='text' required\r\n          name='repeat_password' id='repeat_password'\r\n        />\r\n        <label\r\n          htmlFor='password'\r\n          id='error_repeat_password'\r\n          className='error'\r\n          style={{ display: 'none' }}\r\n        >\r\n          <p>Passwords must match.</p>\r\n        </label>\r\n      \r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Register;","C:\\Users\\diolo\\www\\flickshare-client\\src\\api.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Error.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\List.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\ListPreview.js",["92","93","94"],"import { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken';\r\nimport { JWT_SECRET } from './config';\r\nimport MoviePreview from './MoviePreview';\r\nimport Error from './Error';\r\nimport './ListPreview.css';\r\n\r\nimport React, { Component } from 'react';\r\nimport api from './api';\r\n\r\nclass ListPreview extends Component {\r\n  static defaultProps = {\r\n    list: { movies: [] }\r\n  };\r\n\r\n  state = { list: { movies: [] } };\r\n\r\n  componentDidMount() {\r\n    const list_id = parseInt(this.props.list_id);\r\n\r\n    if (list_id) {\r\n      api.getListById(list_id)\r\n        .then(list => {\r\n          this.setState({ list });\r\n        })\r\n        .catch(error => <Error message={error}/>)\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n          if (error) return null;\r\n          return decoded;\r\n        })\r\n      : null;\r\n    \r\n    const user_id = (decoded) ? decoded.user_id : null;\r\n    const admin = (decoded) ? decoded.admin : false;\r\n\r\n    let { list, list_id } = this.props;\r\n\r\n    if (!list.list_id) {\r\n      list = this.state.list;\r\n    };\r\n\r\n    console.log(list);\r\n\r\n    if (list.movies.length < 1) return null;\r\n\r\n    return (\r\n      <div className='list-preview'>\r\n        <Link to={`/lists/${list.list_id}`}>\r\n          <h4>{list.name}</h4>\r\n        </Link>\r\n       \r\n        <div className='list-preview-movies'>\r\n          {\r\n            list.movies.map(movie =>\r\n              <MoviePreview\r\n                key={movie.movie_id}\r\n                movie={movie} />\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListPreview;","C:\\Users\\diolo\\www\\flickshare-client\\src\\MoviePreview.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\MovieOptions.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\config.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movie.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\User.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\UserEdit.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\helpers\\validation.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":15,"column":34,"nodeType":"101","messageId":"102","endLine":15,"endColumn":46},{"ruleId":"99","severity":1,"message":"103","line":29,"column":11,"nodeType":"101","messageId":"102","endLine":29,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"105","line":40,"column":11,"nodeType":"101","messageId":"102","endLine":40,"endColumn":18},{"ruleId":"99","severity":1,"message":"106","line":41,"column":11,"nodeType":"101","messageId":"102","endLine":41,"endColumn":16},{"ruleId":"99","severity":1,"message":"107","line":43,"column":17,"nodeType":"101","messageId":"102","endLine":43,"endColumn":24},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'setUserLists' is assigned a value but never used.","Identifier","unusedVar","'userLists' is assigned a value but never used.","'Error' is defined but never used.","'user_id' is assigned a value but never used.","'admin' is assigned a value but never used.","'list_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]