[{"C:\\Users\\diolo\\www\\react-template\\src\\index.js":"1","C:\\Users\\diolo\\www\\react-template\\src\\App.js":"2","C:\\Users\\diolo\\www\\flickshare-client\\src\\index.js":"3","C:\\Users\\diolo\\www\\flickshare-client\\src\\App.js":"4","C:\\Users\\diolo\\www\\flickshare-client\\src\\config.js":"5","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\movie-service.js":"6","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\validation.js":"7","C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\error-boundary.js":"8","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\ResetPassword.js":"9","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Suggestions\\Suggestions.js":"10","C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\Error.js":"11","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\api.js":"12","C:\\Users\\diolo\\www\\flickshare-client\\src\\Header\\Header.js":"13","C:\\Users\\diolo\\www\\flickshare-client\\src\\Footer\\Footer.js":"14","C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\MainMenu.js":"15","C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\Welcome.js":"16","C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Login.js":"17","C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Register.js":"18","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\User.js":"19","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserEdit.js":"20","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Lists.js":"21","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\List.js":"22","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\Movie.js":"23","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieSearch.js":"24","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Admin.js":"25","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListPreview.js":"26","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MoviePreview.js":"27","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieOptions.js":"28","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Users.js":"29","C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserPreview.js":"30","C:\\Users\\diolo\\www\\flickshare-client\\src\\context\\token-context.js":"31","C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\token-service.js":"32","C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListEdit.js":"33"},{"size":171,"mtime":1611252467376,"results":"34","hashOfConfig":"35"},{"size":202,"mtime":1611252349029,"results":"36","hashOfConfig":"35"},{"size":270,"mtime":1613365713205,"results":"37","hashOfConfig":"38"},{"size":7091,"mtime":1614087577276,"results":"39","hashOfConfig":"38"},{"size":475,"mtime":1613710073089,"results":"40","hashOfConfig":"38"},{"size":637,"mtime":1613697559869,"results":"41","hashOfConfig":"38"},{"size":1183,"mtime":1613906576406,"results":"42","hashOfConfig":"38"},{"size":525,"mtime":1613902270926,"results":"43","hashOfConfig":"38"},{"size":2406,"mtime":1614055909078,"results":"44","hashOfConfig":"38"},{"size":1801,"mtime":1614086856239,"results":"45","hashOfConfig":"38"},{"size":421,"mtime":1613905598621,"results":"46","hashOfConfig":"38"},{"size":6475,"mtime":1614041275011,"results":"47","hashOfConfig":"38"},{"size":1828,"mtime":1613905550774,"results":"48","hashOfConfig":"38"},{"size":686,"mtime":1614089220415,"results":"49","hashOfConfig":"38"},{"size":830,"mtime":1613923869842,"results":"50","hashOfConfig":"38"},{"size":1831,"mtime":1614081418936,"results":"51","hashOfConfig":"38"},{"size":1780,"mtime":1614055329784,"results":"52","hashOfConfig":"38"},{"size":3973,"mtime":1614055825395,"results":"53","hashOfConfig":"38"},{"size":2677,"mtime":1614054292358,"results":"54","hashOfConfig":"38"},{"size":3187,"mtime":1614047220919,"results":"55","hashOfConfig":"38"},{"size":3157,"mtime":1614101061892,"results":"56","hashOfConfig":"38"},{"size":6636,"mtime":1614095646044,"results":"57","hashOfConfig":"38"},{"size":2010,"mtime":1614047717294,"results":"58","hashOfConfig":"38"},{"size":1711,"mtime":1614047122357,"results":"59","hashOfConfig":"38"},{"size":1658,"mtime":1614022604235,"results":"60","hashOfConfig":"38"},{"size":3294,"mtime":1614096691435,"results":"61","hashOfConfig":"38"},{"size":936,"mtime":1614091812761,"results":"62","hashOfConfig":"38"},{"size":4525,"mtime":1614049810378,"results":"63","hashOfConfig":"38"},{"size":906,"mtime":1613906299046,"results":"64","hashOfConfig":"38"},{"size":597,"mtime":1613905682341,"results":"65","hashOfConfig":"38"},{"size":105,"mtime":1613919324855,"results":"66","hashOfConfig":"38"},{"size":423,"mtime":1613925123640,"results":"67","hashOfConfig":"38"},{"size":950,"mtime":1614101036988,"results":"68","hashOfConfig":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jr9xs2",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1ffbce9",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"C:\\Users\\diolo\\www\\react-template\\src\\index.js",[],"C:\\Users\\diolo\\www\\react-template\\src\\App.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\index.js",[],["141","142"],"C:\\Users\\diolo\\www\\flickshare-client\\src\\App.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\config.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\movie-service.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\validation.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\error-boundary.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\ResetPassword.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Suggestions\\Suggestions.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\error-handlers\\Error.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\api.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Header\\Header.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Footer\\Footer.js",["143","144","145","146","147","148"],"import './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div className='icons'>\r\n        <a href=\"mailto:dionisggr@gmail.com\" target=\"_blank\" aria-label=\"email\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a>\r\n        <a href=\"https://github.com/dionisggr/flickshare-client/\" target=\"_blank\" aria-label=\"github\"><i class=\"fa fa-github\" aria-hidden=\"true\"></i></a>\r\n        <a href=\"https://www.linkedin.com/in/dionis-gonzalez-ramirez/\" target=\"_blank\" aria-label=\"linked-in\"><i class=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i></a>\r\n      </div>\r\n      \r\n      <h2>&copy; Dionis González Ramírez</h2>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\MainMenu.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Main\\Welcome.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Login.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Access\\Register.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\User.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserEdit.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\Lists.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\List.js",["149","150"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { JWT_SECRET } from '../../config';\r\nimport jwt from 'jsonwebtoken';\r\nimport ListPreview from './ListPreview';\r\nimport MoviePreview from '../../Movies/MoviePreview';\r\nimport MovieSearch from '../../Movies/MovieSearch';\r\nimport MovieService from '../../services/movie-service';\r\nimport Error from '../../error-handlers/Error';\r\nimport api from '../../services/api';\r\nimport './List.css';\r\n\r\nclass List extends Component {\r\n  static defaultProps = {\r\n    list: { movies: [] },\r\n    list_id: null,\r\n  };\r\n\r\n  state = {\r\n    list: { movies: [] },\r\n    showMovieSearch: false,\r\n    editMode: false,\r\n  };\r\n\r\n  addMovie = (movie) => {\r\n    const newState = { ...this.state };\r\n    \r\n    newState.list.movies.push(movie);\r\n    \r\n    this.setState(newState);\r\n    \r\n    window.scroll(0, 0);\r\n  };\r\n\r\n  renderMovieSearch = () => {\r\n    const newState = { ...this.state };\r\n\r\n    newState.showMovieSearch = true;\r\n\r\n    this.setState(newState);\r\n  }; \r\n\r\n  showEditMode = () => {\r\n    const newState = { ...this.state };\r\n\r\n    newState.editMode = true;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  cancelEditMode = () => {\r\n    const newState = { ...this.state };\r\n\r\n    newState.editMode = false;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  editList = async (evt, list_id) => {\r\n    const newState = { ...this.state };\r\n\r\n    const name = evt.target.parentElement\r\n      .querySelector('#list_name').value;\r\n    \r\n    const list = await api.getListById(list_id);\r\n\r\n    const { user_id } = list;\r\n    const editedList = { name, user_id };\r\n\r\n    newState.list = await api.editList(list_id, editedList);\r\n    newState.editMode = false;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  deleteList = (list_id, user_id) => {\r\n    const { history } = this.props;\r\n\r\n    api.deleteList(list_id)\r\n      .then(() => history.push(`/users/${user_id}/lists`))\r\n      .catch(error => console.log({ error }));\r\n  };\r\n\r\n  getSuggestions = async (list) => {\r\n    const { history } = this.props;\r\n\r\n    const data = (await api.getMoviesSuggestions(list.movies))\r\n      .reduce((total, each) => total.concat(each.results), []);\r\n      \r\n    const movies = MovieService.prepare(data)\r\n      .sort((previous, next) => next.popularity - previous.popularity)\r\n      .slice(0, 25);\r\n    \r\n    if (movies.length < 1) {\r\n      return this.setState({ list: null });\r\n    };\r\n    \r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n          if (error) return null\r\n          return decoded;\r\n        })\r\n      : null;\r\n    \r\n    const user_id = (decoded) ? parseInt(decoded.user_id) : null;\r\n\r\n    const newList = {\r\n      name: `From ${list.name}`, suggestion: true,\r\n      user_id, movies\r\n    };\r\n\r\n    api.createList(newList)\r\n      .then(() => history.push(`/users/${user_id}/suggestions`))\r\n      .catch(error => <Error message={error} />)\r\n  };\r\n\r\n  componentDidMount() {\r\n    const list_id = parseInt(this.props.list_id);\r\n\r\n    if (list_id) {\r\n      api.getListById(list_id)\r\n        .then(list => {\r\n          this.setState({ list });\r\n        })\r\n        .catch(error => <Error message={error}/>)\r\n    };\r\n\r\n    window.scroll(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n          if (error) return null;\r\n          return decoded;\r\n        })\r\n      : null;\r\n    \r\n    const user_id = (decoded) ? decoded.user_id : null;\r\n    const admin = (decoded) ? decoded.admin : false;\r\n\r\n    let { list, history } = this.props;\r\n\r\n    if (!list.list_id) {\r\n      list = this.state.list;\r\n    };\r\n\r\n    if (!list) {\r\n      return <Error message={`Wow, you're good! No movies.`} />;\r\n    };\r\n\r\n    if (list.user_id && user_id !== list.user_id && !admin) {\r\n      return <Error message={'Invalid access'} />\r\n    };\r\n\r\n    const getSuggestionsButton = (decoded && list.movies.length > 0)\r\n      ? <button\r\n          type='button'\r\n          className='get-suggestions'\r\n          onClick={() => this.getSuggestions(list)}\r\n        >\r\n          Get Suggestions\r\n        </button>\r\n      : null;\r\n    \r\n    const addButton = (decoded && !this.state.editMode && user_id === list.user_id)\r\n      ? <button\r\n          type='button'\r\n          onClick={this.renderMovieSearch}\r\n        >\r\n          ADD\r\n        </button>\r\n      : null;\r\n    \r\n    const editButton = (!this.state.editMode)\r\n      ? (decoded && user_id === list.user_id)\r\n        ? < button\r\n            type='button'\r\n            onClick={this.showEditMode}\r\n          >\r\n            EDIT\r\n          </button>\r\n        : null\r\n      : <>\r\n          <button\r\n            type='button'\r\n            onClick={(evt) => this.editList(evt, list.list_id)}\r\n          >\r\n            SAVE\r\n          </button>\r\n          <button\r\n            type='button'\r\n            onClick={this.cancelEditMode}\r\n          >\r\n            CANCEL\r\n          </button>\r\n      </>\r\n    \r\n    const deleteButton = (decoded && !this.state.editMode && user_id === list.user_id)\r\n      ? <button\r\n          type='button'\r\n          onClick={() => this.deleteList(list.list_id, user_id)}\r\n        >\r\n          DELETE\r\n        </button>\r\n      : null;\r\n    \r\n    const movieSearch = (this.state.showMovieSearch)\r\n      ? <MovieSearch\r\n          list_id={list.list_id}\r\n          addMovie={this.addMovie}\r\n        />\r\n      : null;\r\n    \r\n    const listName = (this.state.editMode)\r\n      ? <input\r\n          type='text'\r\n          id='list_name'\r\n          name='list_name'\r\n          defaultValue={list.name}\r\n        />\r\n      : <Link to={`/lists/${list.list_id}`}>\r\n          <h4>{list.name}</h4>\r\n        </Link>\r\n    \r\n    const backPath = (list.user_id)\r\n      ? `/users/${list.user_id}/lists`\r\n      : '/home';\r\n\r\n    return (\r\n      <div className='list'>\r\n        <h3>List Details</h3>\r\n\r\n        {editButton}\r\n\r\n        {deleteButton}\r\n       \r\n        <div className='list-movies'>\r\n          {\r\n            <ListPreview\r\n              key={list.list_id}\r\n              list={list}\r\n            />\r\n          }\r\n        </div>\r\n\r\n        {getSuggestionsButton}\r\n\r\n        {addButton}\r\n        \r\n        {movieSearch}\r\n\r\n        <button\r\n          type='button'\r\n          onClick={() => history.push(backPath)}\r\n        >\r\n          BACK\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\Movie.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieSearch.js",["151"],"import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Movie from './Movie';\r\nimport MovieService from '../services/movie-service';\r\nimport Error from '../error-handlers/Error';\r\nimport api from '../services/api';\r\nimport './MovieSearch.css';\r\n\r\nclass MovieSearch extends React.Component {\r\n  state = { results: [] };\r\n\r\n  search = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const movie = evt.target.movie_input.value;\r\n\r\n    const response = await api.searchMovie(movie)\r\n      .catch(error => <Error message={error} />);\r\n    \r\n    const results = MovieService.prepare(response.results);\r\n    \r\n    this.setState({ results });\r\n  };\r\n\r\n  addToList = (movie) => {\r\n    const { match, addMovie } = this.props;\r\n    const list_id = parseInt(match.params.list);\r\n\r\n    api.addMovieToList(list_id, movie)\r\n      .then(() => window.location.reload())\r\n      .catch(error => console.log({ error }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='movie-search'>\r\n        <form\r\n          className='search'\r\n          onSubmit={this.search}\r\n        >\r\n          <h3>Movie Search</h3>\r\n          <input\r\n            type='text'\r\n            id='movie_input'\r\n            name='movie_input'\r\n            placeholder='Search...'\r\n          />\r\n          <button type='submit'>Search</button>\r\n        </form>\r\n        <div className='results'>\r\n          {\r\n            this.state.results.map((movie, idx) => \r\n              <Movie\r\n                key={idx}\r\n                movie={movie}\r\n                addToList={this.addToList}\r\n              />\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withRouter(MovieSearch);","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Admin.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListPreview.js",["152"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MoviePreview from '../../Movies/MoviePreview';\r\nimport Error from '../../error-handlers/Error';\r\nimport api from '../../services/api';\r\nimport './ListPreview.css';\r\n\r\nclass ListPreview extends Component {\r\n  static defaultProps = {\r\n    list: { movies: [] },\r\n    list_id: null\r\n  };\r\n\r\n  state = {\r\n    list: { movies: [] },\r\n    autoScroller: null,\r\n    refresh: false\r\n  };\r\n\r\n  scroll = (evt, direction) => {\r\n    const movieList = evt.target.parentElement.parentElement.parentElement\r\n      .querySelector('div.list-preview-movies');\r\n    \r\n    const newState = { ...this.state };\r\n    \r\n    if (direction === 'left') {\r\n      newState.autoScroller = setInterval(() => {\r\n        movieList.scrollLeft -= 5;\r\n      }, 10);\r\n\r\n    } else if (direction === 'right') {\r\n      newState.autoScroller = setInterval(() => {\r\n        movieList.scrollLeft += 5;\r\n      }, 10);\r\n\r\n    } else {\r\n      clearInterval(newState.autoScroller);\r\n      newState.list.movies = newState.list.movies;\r\n    };\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  setMovies = (movies) => {\r\n    const newState = { ...this.state };\r\n\r\n    newState.list = this.props.list;\r\n    newState.list.movies = movies || [];\r\n    newState.refresh = true;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const list_id = parseInt(this.props.list_id);\r\n\r\n    if (list_id) {\r\n      api.getListById(list_id)\r\n        .then(list => {\r\n          this.setState({ list });\r\n        })\r\n        .catch(error => <Error message={error}/>)\r\n    };\r\n  };\r\n\r\n  render() {\r\n    let { list } = this.props;\r\n\r\n    if (!list.list_id) {\r\n      list = this.state.list;\r\n    };\r\n\r\n    if (this.state.refresh) {\r\n      list = this.state.list;\r\n    };\r\n\r\n    const renderList = (list.movies.length > 0)\r\n      ? list.movies.map(movie =>\r\n        <MoviePreview\r\n          setMovies={this.setMovies}\r\n          key={movie.movie_id}\r\n          list={list}\r\n          movie={movie}\r\n        />\r\n      )\r\n      : <div className='no-movies'>\r\n          <h3>Wow, so much empty.</h3>\r\n        </div>\r\n    \r\n    const leftArrow = (list.movies.length > 2)\r\n      ? <div className='scroll-left'>\r\n          <button\r\n            type='button'\r\n            onMouseEnter={(evt) => this.scroll(evt, 'left')}\r\n            onMouseLeave={(evt) => this.scroll(evt, 'stop')}\r\n          >\r\n            <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      : null;\r\n    \r\n    const rightArrow = (list.movies.length > 2)\r\n      ? <div className='scroll-right'>\r\n          <button\r\n            type='button'\r\n            onMouseEnter={(evt) => this.scroll(evt, 'right')}\r\n            onMouseLeave={(evt) => this.scroll(evt, 'stop')}\r\n          >\r\n            <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      : null;\r\n\r\n\r\n    return (\r\n      <div className='list-preview'>\r\n        <Link to={`/lists/${list.list_id}`}>\r\n          <h3>{list.name}</h3>\r\n        </Link>\r\n     \r\n        <div className='list-preview-movies'>            \r\n          {renderList}\r\n        </div>\r\n\r\n        {leftArrow}\r\n        {rightArrow}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListPreview;","C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MoviePreview.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Movies\\MovieOptions.js",["153"],"import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { JWT_SECRET } from '../config';\r\nimport jwt from 'jsonwebtoken';\r\nimport MovieService from '../services/movie-service';\r\nimport Error from '../error-handlers/Error';\r\nimport api from '../services/api';\r\nimport './MovieOptions.css';\r\n\r\nclass MovieOptions extends React.Component {\r\n  static defaultProps = { list: {}, setMovies: {} };\r\n\r\n  state = { lists: null, movieWasAdded: null, list: {} };\r\n\r\n  getUserLists = () => {\r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n          if (error) return null;\r\n          return decoded;\r\n        })\r\n      : null;\r\n    \r\n    const user_id = (decoded) ? decoded.user_id : null;\r\n\r\n    api.getUserLists(user_id)\r\n      .then(lists => {\r\n        return this.setState({ lists });\r\n      })\r\n      .catch(error => <Error message={error} />);\r\n  };\r\n\r\n  addToList = (list_id, movie) => {\r\n    api.addMovieToList(list_id, movie)\r\n      .then(() => {\r\n        const newState = { ...this.state };\r\n\r\n        newState.lists = null;\r\n        newState.movieWasAdded = true;\r\n\r\n        return this.setState(newState);\r\n      })\r\n      .catch(() => {\r\n        const newState = { ...this.state };\r\n\r\n        newState.movieWasAdded = false;\r\n\r\n        this.setState(newState);\r\n      });\r\n  };\r\n\r\n  removeMovie = async (list_id, movie_id) => {\r\n    api.removeMovieFromList(list_id, movie_id)\r\n      .then((res) => window.location.reload())\r\n      .catch(error => <Error message={error} />);\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const newState = { ...this.state };\r\n    const { list, match } = this.props;\r\n    const list_id = parseInt(match.params.list);\r\n\r\n    if (!list.list_id) {\r\n      const list = await api.getListById(list_id);\r\n\r\n      newState.list = list;\r\n\r\n      this.setState(newState);\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { lists, movieWasAdded } = this.state;\r\n    let { movie, list } = this.props;\r\n    const { movie_id } = movie;\r\n    const list_id = (list.list_id)\r\n      ? list.list_id\r\n      : parseInt(this.props.match.params.list);\r\n\r\n    const flickshareToken = JSON.parse(window.localStorage.getItem('flickshareToken'));\r\n\r\n    const decoded = (flickshareToken)\r\n      ? jwt.verify(flickshareToken, JWT_SECRET, (error, decoded) => {\r\n        if (error) return null;\r\n        return decoded;\r\n      })\r\n      : null;\r\n    \r\n    const addButton = (decoded)\r\n      ? <button\r\n        type='button'\r\n        className='add'\r\n        onClick={this.getUserLists}\r\n      >\r\n        +\r\n        </button>\r\n      : null;\r\n    \r\n    if (!list.list_id) {\r\n      list = this.state.list;\r\n    };    \r\n    \r\n    const removeButton = (\r\n      decoded && list && decoded.user_id === list.user_id\r\n    )\r\n      ? <button\r\n        className='remove-movie'\r\n        onClick={() => this.removeMovie(list_id, movie_id)}\r\n      >\r\n        x\r\n        </button>\r\n      : null;\r\n\r\n    if (movieWasAdded !== null) {\r\n      setTimeout(() => {\r\n        const newState = { ...this.state };\r\n        newState.movieWasAdded = null;\r\n        this.setState(newState);\r\n      }, 1500)\r\n      return (\r\n        <div className='movie-added'>\r\n          {\r\n            (movieWasAdded)\r\n              ? < h4 > Movie added.</h4>\r\n              : < h4 > Already on list!</h4>\r\n          }\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const movieListOptions = (lists)\r\n      ? <div className='movie-list-options'>\r\n          <label>Lists</label>\r\n          <ul>\r\n            {\r\n              lists.map((list, idx) =>\r\n                <li key={idx}>\r\n                  <button\r\n                    type='button'\r\n                    onClick={() => this.addToList(list_id, movie)}\r\n                  >\r\n                    {list.name}\r\n                  </button>\r\n                </li>\r\n              )\r\n            }\r\n          </ul>\r\n        </div>\r\n      : null;\r\n    \r\n    const moviePreviewOptions = (!lists)\r\n      ? <div className='movie-preview-options'>\r\n          {removeButton}\r\n          {addButton}\r\n\r\n          <Link to={{\r\n            pathname: `/movies/${movie_id}`,\r\n            movie\r\n          }}>\r\n            More Info\r\n            </Link>\r\n\r\n        </div>\r\n      : null;\r\n    \r\n    return (\r\n      <>\r\n        { movieListOptions}\r\n        { moviePreviewOptions}\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withRouter(MovieOptions);","C:\\Users\\diolo\\www\\flickshare-client\\src\\Admin\\Users.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Users\\UserPreview.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\context\\token-context.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\services\\token-service.js",[],"C:\\Users\\diolo\\www\\flickshare-client\\src\\Lists\\List\\ListEdit.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":7,"column":9,"nodeType":"160","endLine":7,"endColumn":81},{"ruleId":"161","severity":1,"message":"162","line":7,"column":9,"nodeType":"160","endLine":7,"endColumn":81},{"ruleId":"158","severity":1,"message":"159","line":8,"column":9,"nodeType":"160","endLine":8,"endColumn":103},{"ruleId":"161","severity":1,"message":"162","line":8,"column":9,"nodeType":"160","endLine":8,"endColumn":103},{"ruleId":"158","severity":1,"message":"159","line":9,"column":9,"nodeType":"160","endLine":9,"endColumn":111},{"ruleId":"161","severity":1,"message":"162","line":9,"column":9,"nodeType":"160","endLine":9,"endColumn":111},{"ruleId":"163","severity":1,"message":"164","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":20},{"ruleId":"163","severity":1,"message":"167","line":219,"column":11,"nodeType":"165","messageId":"166","endLine":219,"endColumn":19},{"ruleId":"163","severity":1,"message":"168","line":26,"column":20,"nodeType":"165","messageId":"166","endLine":26,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":38,"column":30,"nodeType":"171","messageId":"172","endLine":38,"endColumn":50},{"ruleId":"163","severity":1,"message":"173","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":20},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-unused-vars","'MoviePreview' is defined but never used.","Identifier","unusedVar","'listName' is assigned a value but never used.","'addMovie' is assigned a value but never used.","no-self-assign","'newState.list.movies' is assigned to itself.","MemberExpression","selfAssignment","'MovieService' is defined but never used.","no-global-assign","no-unsafe-negation"]